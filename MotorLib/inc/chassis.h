#ifndef  _LOCATE_H
#define  _LOCATE_H

/*
                            
                             (A)(E)
                    (D)*-------*-------*(B)
                        \			  /
                         \		     /
                          \		    /
                           \       /
			  		        \     /
		  			         \   /
						      \ /
						       *(C)
*/

/******************** define ************************/

//#define L1 				 	105	
//#define L2 				 	200	
//#define L3 				 	91.2	
//#define LEG_NUMBER           4
//#define LENGTH 		 		30	
//#define JUMPLENGTH    6
//#define FALLDOWNLENGTH    6
//#define WITHDRAWLENGTH    7
//#define CRAWLLENGTH   30

//#define LEFTSIDE	 		1			
//#define RIGHTSIDE			-1		
////#define PI                  3.1415926
//#define TURNINGFACTOR       2.2
//#define PITCHFACTOR         20
//#define PATH_NUMBER         6       //跳跃路径量

/************************* struct *************************/

typedef  struct
{
	float x;
	float y;
	float volatile fy;

}LegPointsTypedef;

typedef  struct
{
	float x;
	float y;
}ClassicPointsTypedef;

typedef  enum
{
  MOTOR_1=1,
	MOTOR_2,
	MOTOR_3,
	MOTOR_4,
	MOTOR_5,
	MOTOR_6,
	MOTOR_7,
	MOTOR_8,
}MotorID;

typedef  enum
{
	LEG_1=1,
	LEG_2,
	LEG_3,
	LEG_4,
}LegID;

/************************* variable *************************/
//LegPointsTypedef		   A, E;
//LegPointsTypedef		   FootPointC;
//ClassicPointsTypedef       p0, p1, p2, p3;   //Bezier?????
//ClassicPointsTypedef       p[4][4];          //??Bezier?????
//LegPointsTypedef FOOTPOINT[4][LENGTH] = {0};

////JUMP
///*************** the first leg **************/
//float MOTOR_1_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{136,	129,	100,	70,	45,	30},    //平跳
//{136,	129,	100,	70,	45,	30},    //上台阶第一步
//{79,	76,	65,	46,	28,	14},        //上台阶第二步
//{136,	135,	119,	102,	90,	84},  //上台阶第三步
////{79,	76,	65,	46,	28,	14},        //爬坡跳跃（有问题）
//{136, 129, 100, 70, 45, 30},//右转跳
//{136, 83, 40, 11,	-10, -32}     //左转跳
//} ;
//float MOTOR_2_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{123,	85,	40,	8,	-18,	-37},
//{123,	85,	40,	8,	-18,	-37},
//{21,	14,	3,	-12,	-28,	-42},
//{123,	95,	57,	30,	12,	-3},
////{21,	14,	3,	-12,	-28,	-42},
//{123, 85, 40, 8, -18, -37},
//{123, 80, 54, 41, 34, 26	}
//} ;
///*************** the second leg **************/
//float MOTOR_3_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{136,	131,	104,	78,	57,	47},
//{136,	131,	104,	78,	57,	47},
//{136,	135,	119,	102,	90,	84},
//{31,	44,	46,	40,	34,	33},//{46,	55,	53,	44,	36,	33},
////{136,	135,	119,	102,	90,	84},
//{136,	131,	104,	78,	57,	47},
//{136, 86, 46, 19,   0,  -19}
//} ;
//float MOTOR_4_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{123,	87,	43,	12,	-12,	-27},
//{123,	87,	43,	12,	-12,	-27},
//{123,	95,	57,	30,	12,	-3},
//{62,	58,	44,	26,	10,	-2},//{60,	54,	39,	21,	4,	-7},
////{123,	95,	57,	30,	12,	-3},
//{123,	87,	43,	12,	-12,	-27},
//{123, 84, 60, 49,  44, 39}
//} ;
///*************** the third leg **************/
//float MOTOR_5_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{-137,	-130,	-101,	-71,	-46,	-31},
//{-137,	-130,	-101,	-71,	-46,	-31},
//{-80,	-77,	-66,	-47,	-29,	-15},
//{-137,	-136,	-120,	-103,	-91,	-85},
////{-80,	-77,	-66,	-47,	-29,	-15},
//{-137, -84, -41, -12, 9, 31 },
//{-137,	-130,	-101,	-71,	-46,	-31}
//} ;
//float MOTOR_6_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{-124,	-86,	-41,	-9,	17,	36},
//{-124,	-86,	-41,	-9,	17,	36},
//{-22,	-15,	-4,	11,	27,	41},
//{-124,	-96,	-58,	-31,	-13,	2},
////{-22,	-15,	-4,	11,	27,	41},
//{-124, -81, -55, -42, -35, -27},
//{-124,	-86,	-41,	-9,	17,	36}
//} ;
///*************** the fourth leg **************/
//float MOTOR_7_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{-137,	-132,	-105,	-79,	-58,	-48},
//{-137,	-132,	-105,	-79,	-58,	-48},
//{-137,	-136,	-120,	-103,	-91,	-85},
//{-32,	-45,	-47,	-41,	-35,	-34},//{-47,	-56,	-54,	-45,	-37,	-34},
////{-137,	-136,	-120,	-103,	-91,	-85},
//{-137, -87, -47, -20, -1, 18},
//{-137,	-132,	-105,	-79,	-58,	-48}
//} ;
//float MOTOR_8_JUMP_ANGLE[PATH_NUMBER][JUMPLENGTH] = {
//{-124,	-88,	-44,	-13,	11,	26},
//{-124,	-88,	-44,	-13,	11,	26},
//{-124,	-96,	-58,	-31,	-13,	2},
//{-63,	-59,	-45,	-27,	-11,	1},//{-61,	-55,	-40,	-22,	-5,	6},
////{-124,	-96,	-58,	-31,	-13,	2},
//{-124, -85, -61, -50, -45, -40},
//{-124,	-88,	-44,	-13,	11,	26}
//} ;

////WITHDRAW
///*************** the first leg **************/
//float MOTOR_1_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{89,	113,	135,	145,	97,	51,	18},
//{89,	113,	135,	145,	97,	51,	18},
//{74,	103,	124,	140,	150,	140,	116},
//{104,	119,	130,	130,	102,	64,	26},
//{18,  51, 97,145,135,113,	89},
//{18,  51, 97,145,135,113,	89}
//} ;
//float MOTOR_2_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{1,	29,	75,	137,	113,	91,	72},
//{1,	29,	75,	137,	113,	91,	72},
//{-3,	18,	40,	69,	101,	110,	96},
//{22,	52,	88,	120,	115,	95,	72},
//{72,91,113,137,	75,	29,1		},
//{72,91,113,137,	75,	29,1		}
//} ;
///*************** the second leg **************/
//float MOTOR_3_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{80,	105,	125,	128,	89,	46,	12},
//{80,	105,	125,	128,	89,	46,	12},
//{112,	138,	162,	145,	86,	48,	17},//{102,	118,	134,	145,	132,	93,	54},
//{59,	76,	81,	72,	52,	28,	5},//{61,	79,	90,	88,	69,	43,	16},
//{12,  46, 89,	128,125,105,80},
//{12,  46, 89,	128,125,105,80}
//} ;
//float MOTOR_4_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{-3,	25,	66,	111,	103,	84,	65},
//{-3,	25,	66,	111,	103,	84,	65},
//{29,	78,	155,	171,	115,	90,	69},//{10,	27,	55,	92,	105,	84,	61},
//{22,	46,	69,	82,	81,	72,	58},//{20,	46,	73,	92,	94,	84,	67},
//{65,84,103,111, 66, 25,	-3},
//{65,84,103,111, 66, 25,	-3}
//} ;
///*************** the third leg **************/
//float MOTOR_5_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{-75,	-103,	-124,	-127,	-88,	-45,	-10},
//{-75,	-103,	-124,	-127,	-88,	-45,	-10},
//{-75,	-104,	-125,	-141,	-151,	-141},
//{-105,	-120,	-131,	-131,	-103,	-65,	-27},
//{-75,	-103,	-124,	-127,	-88,	-45,	-10},
//{-75,	-103,	-124,	-127,	-88,	-45,	-10}
//} ;
//float MOTOR_6_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{4,	-25,	-65,	-109,	-101,	-82,	-61},
//{4,	-25,	-65,	-109,	-101,	-82,	-61},
//{2,	-19,	-41,	-70,	-102,	-111},
//{-23,	-53,	-89,	-121,	-116,	-96,	-73},
//{4,	-25,	-65,	-109,	-101,	-82,	-61},
//{4,	-25,	-65,	-109,	-101,	-82,	-61}
//} ;
///*************** the fourth leg **************/
//float MOTOR_7_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{-81,	-106,	-126,	-129,	-90,	-47,	-13},
//{-81,	-106,	-126,	-129,	-90,	-47,	-13},
//{-113,	-139,	-163,	-146,	-87,	-49,	-18},//{-103,	-119,	-135,	-146,	-133,	-94,	-55},
//{-60,	-77,	-82,	-73,	-53,	-29,	-6},//{-62,	-80,	-91,	-89,	-70,	-44,	-17},
//{-81,	-106,	-126,	-129,	-90,	-47,	-13},
//{-81,	-106,	-126,	-129,	-90,	-47,	-13}
//} ;
//float MOTOR_8_WITHDRAW_ANGLE[PATH_NUMBER][WITHDRAWLENGTH] = {
//{2,	-26,	-67,	-112,	-104,	-85,	-66},
//{2,	-26,	-67,	-112,	-104,	-85,	-66},
//{-30,	-79,	-156,	-172,	-116,	-91,	-70},//{-11,	-28,	-56,	-93,	-106,	-85,	-62},
//{-23,	-47,	-70,	-83,	-82,	-73,	-59},//{-21,	-47,	-74,	-93,	-95,	-85,	-68},
//{2,	-26,	-67,	-112,	-104,	-85,	-66},
//{2,	-26,	-67,	-112,	-104,	-85,	-66}
//} ;


////FALLDOWN
///*************** the first leg **************/
//float MOTOR_1_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{-32,	-10,	11,	40,	83,	136},
//{-32,	1,	27,	50,	65,	68},
//{95,	99,	109,	123,	137,	141},
//{-32,-32,-32,-32,-32,-32},//,	-10,	11,	40,	83,	136},
//{30,  45, 70, 100, 129, 136} ,
//{30,  45, 70, 100, 129, 136} 
//};
//float MOTOR_2_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{26,	34,	41,	54,	80,	123},
//{26,	36,	39,	36,	26,	8},
//{82,	81,	86,	98,	109,	107},
//{26,26,26,26,26,26},//	34,	41,	54,	80,	123},
//{-37, -18,8,   40,   85,  123},
//{-37, -18,8,   40,   85,  123}
//};
///*************** the second leg **************/
//float MOTOR_3_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{-19,	0,	19,	46,	86,	136},
//{-19,	2,	30,	66,	108,	136},
//{-19,	-10,	1,	14,	24,	31},//{7,	12,	24,	39,	50,	55},
//{-19,-19,-19,-19,-19,-19},//,	0,	19,	46,	86,	136},
//{ 47,  57,   78,  104, 131,136},
//{ 47,  57,   78,  104, 131,136}
//};
//float MOTOR_4_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{39,	44,	49,	60,	84,	123},
//{39,	46,	61,	82,	110,	123},
//{39,	42,	49,	56,	61,	62},//{30,	31,	39,	49,	56,	57},
//{39,39,39,39,39,39},//,	44,	49,	60,	84,	123},
//{-27, -12,12,	43, 87, 123},
//{-27, -12,12,	43, 87, 123}
//};
///*************** the third leg **************/
//float MOTOR_5_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{31,	9,	-12,	-41,	-84,	-137},
//{31,	-2,	-28,	-51,	-66,	-69},
//{-96,	-100,	-110,	-124,	-138,	-142},
//{31,31,31,31,31,31},//,	9,	-12,	-41,	-84,	-137},
//{31,	9,	-12,	-41,	-84,	-137},
//{31,	9,	-12,	-41,	-84,	-137}
//};
//float MOTOR_6_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{-27,	-35,	-42,	-55,	-81,	-124},
//{-27,	-37,	-40,	-37,	-27,	-9},
//{-83,	-82,	-87,	-99,	-110,	-108},
//{-27,-27,-27,-27,-27,-27},//,	-35,	-42,	-55,	-81,	-124},
//{-27,	-35,	-42,	-55,	-81,	-124},
//{-27,	-35,	-42,	-55,	-81,	-124}
//};
///*************** the fourth leg **************/
//float MOTOR_7_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{18,	-1,	-20,	-47,	-87,	-137},
//{18,	-3,	-31,	-67,	-109,	-137},
//{18,	9,	-2,	-15,	-25,	-32},//{-8,	-13,	-25,	-40,	-51,	-56},
//{18,18,18,18,18,18},//,	-1,	-20,	-47,	-87,	-137},
//{18,	-1,	-20,	-47,	-87,	-137},
//{18,	-1,	-20,	-47,	-87,	-137}
//};
//float MOTOR_8_FALLDOWN_ANGLE[PATH_NUMBER][FALLDOWNLENGTH] = {
//{-40,	-45,	-50,	-61,	-85,	-124},
//{-40,	-47,	-62,	-83,	-111,	-124},
//{-40,	-43,	-50,	-57,	-62,	-63},//{-31,	-32,	-40,	-50,	-57,	-58},
//{-40,-40,-40,-40,-40,-40},//,	-45,	-50,	-61,	-85,	-124},
//{-40,	-45,	-50,	-61,	-85,	-124},
//{-40,	-45,	-50,	-61,	-85,	-124}
//};

///*************** the first leg **************/

//float MOTOR_1_ANGLE[LENGTH] = {
//79.155, 94.9304, 108.733, 120.409, 128.36,
//127.757, 114.72, 95.6465, 76.8754, 60.4018,
//46.1463, 48.1475, 50.0491, 51.8665, 53.6157,
//55.3127, 56.973, 58.6109, 60.2383, 61.865,
//63.4976, 65.1396, 66.7907, 68.4472, 70.1014,
//71.7424, 73.3558, 74.9243, 76.4282, 77.8459} ;

//float MOTOR_2_ANGLE[LENGTH] = {
//27.4736, 38.9605, 53.7877, 72.9057, 94.7001,
//109.888, 108.34, 97.6677, 85.6458, 73.4891,
//60.4824, 59.1017, 57.6341, 56.098, 54.5109,
//52.8889, 51.246, 49.5934, 47.94, 46.2913,
//44.6503, 43.0167, 41.3874, 39.7546, 38.1175,
//36.4592, 34.7708, 33.0402, 31.255, 29.4033} ;

///*************** the second leg **************/

//float MOTOR_3_ANGLE[LENGTH] = {
//79.155, 94.9304, 108.733, 120.409, 128.36,
//127.757, 114.72, 95.6465, 76.8754, 60.4018,
//46.1463, 48.1475, 50.0491, 51.8665, 53.6157,
//55.3127, 56.973, 58.6109, 60.2383, 61.865,
//63.4976, 65.1396, 66.7907, 68.4472, 70.1014,
//71.7424, 73.3558, 74.9243, 76.4282, 77.8459} ;

//float MOTOR_4_ANGLE[LENGTH] = {
//27.4736, 38.9605, 53.7877, 72.9057, 94.7001,
//109.888, 108.34, 97.6677, 85.6458, 73.4891,
//60.4824, 59.1017, 57.6341, 56.098, 54.5109,
//52.8889, 51.246, 49.5934, 47.94, 46.2913,
//44.6503, 43.0167, 41.3874, 39.7546, 38.1175,
//36.4592, 34.7708, 33.0402, 31.255, 29.4033} ;

///*************** the third leg **************/

//float MOTOR_5_ANGLE[LENGTH] = {
//-79.155, -94.9304, -108.733, -120.409, -128.36,
//-127.757, -114.72, -95.6465, -76.8754, -60.4018,
//-46.1463, -48.1475, -50.0491, -51.8665, -53.6157,
//-55.3127, -56.973, -58.6109, -60.2383, -61.865,
//-63.4976, -65.1396, -66.7907, -68.4472, -70.1014,
//-71.7424, -73.3558, -74.9243, -76.4282, -77.8459} ;

//float MOTOR_6_ANGLE[LENGTH] = {
//-27.4736, -38.9605, -53.7877, -72.9057, -94.7001,
//-109.888, -108.34, -97.6677, -85.6458, -73.4891,
//-60.4824, -59.1017, -57.6341, -56.098, -54.5109,
//-52.8889, -51.246, -49.5934, -47.94, -46.2913,
//-44.6503, -43.0167, -41.3874, -39.7546, -38.1175,
//-36.4592, -34.7708, -33.0402, -31.255, -29.4033} ;

///*************** the fourth leg **************/

//float MOTOR_7_ANGLE[LENGTH] = {
//-79.155, -94.9304, -108.733, -120.409, -128.36,
//-127.757, -114.72, -95.6465, -76.8754, -60.4018,
//-46.1463, -48.1475, -50.0491, -51.8665, -53.6157,
//-55.3127, -56.973, -58.6109, -60.2383, -61.865,
//-63.4976, -65.1396, -66.7907, -68.4472, -70.1014,
//-71.7424, -73.3558, -74.9243, -76.4282, -77.8459} ;

//float MOTOR_8_ANGLE[LENGTH] = {
//-27.4736, -38.9605, -53.7877, -72.9057, -94.7001,
//-109.888, -108.34, -97.6677, -85.6458, -73.4891,
//-60.4824, -59.1017, -57.6341, -56.098, -54.5109,
//-52.8889, -51.246, -49.5934, -47.94, -46.2913,
//-44.6503, -43.0167, -41.3874, -39.7546, -38.1175,
//-36.4592, -34.7708, -33.0402, -31.255, -29.4033} ;




/*************** the first leg **************/

//float MOTOR_1_ANGLE[LENGTH] = {
//79.155,79.155,79.155,79.155,79.155,
//79.155, 94.9304, 108.733, 120.409, 128.36,
//127.757, 114.72, 95.6465, 76.8754, 60.4018,
//46.1463,46.1463,46.1463,46.1463,46.1463,
//46.1463, 50.0491, 53.6157, 56.973, 60.2383,
//63.4976, 66.7907, 70.1014, 73.3558,76.4282} ;

//float MOTOR_2_ANGLE[LENGTH] = {
//27.4736,27.4736,27.4736,27.4736,27.4736,
//27.4736, 38.9605, 53.7877, 72.9057, 94.7001,
//109.888, 108.34, 97.6677, 85.6458, 73.4891,
//60.4824, 60.4824, 60.4824, 60.4824, 60.4824, 
//60.4824, 57.6341, 54.5109,51.246, 47.94,
//44.6503, 41.3874, 38.1175,34.7708, 31.255} ;

///*************** the second leg **************/

//float MOTOR_3_ANGLE[LENGTH] = {
//79.155,79.155,79.155,79.155,79.155,
//79.155, 94.9304, 108.733, 120.409, 128.36,
//127.757, 114.72, 95.6465, 76.8754, 60.4018,
//46.1463,46.1463,46.1463,46.1463,46.1463,
//46.1463, 50.0491, 53.6157, 56.973, 60.2383,
//63.4976, 66.7907, 70.1014, 73.3558,76.4282} ;

//float MOTOR_4_ANGLE[LENGTH] = {
//27.4736,27.4736,27.4736,27.4736,27.4736,
//27.4736, 38.9605, 53.7877, 72.9057, 94.7001,
//109.888, 108.34, 97.6677, 85.6458, 73.4891,
//60.4824, 60.4824, 60.4824, 60.4824, 60.4824, 
//60.4824, 57.6341, 54.5109,51.246, 47.94,
//44.6503, 41.3874, 38.1175,34.7708, 31.255} ;

///*************** the third leg **************/

//float MOTOR_5_ANGLE[LENGTH] = {
//-79.155,-79.155,-79.155,-79.155,-79.155,
//-79.155, -94.9304, -108.733, -120.409, -128.36,
//-127.757, -114.72, -95.6465, -76.8754, -60.4018,
//-46.1463,-46.1463,-46.1463,-46.1463,-46.1463,
//-46.1463, -50.0491, -53.6157, -56.973, -60.2383,
//-63.4976, -66.7907, -70.1014, -73.3558,-76.4282} ;

//float MOTOR_6_ANGLE[LENGTH] = {
//-27.4736,-27.4736,-27.4736,-27.4736,-27.4736,
//-27.4736, -38.9605, -53.7877, -72.9057, -94.7001,
//-109.888, -108.34, -97.6677, -85.6458, -73.4891,
//-60.4824, -60.4824, -60.4824, -60.4824, -60.4824, 
//-60.4824, -57.6341, -54.5109,-51.246, -47.94,
//-44.6503, -41.3874, -38.1175,-34.7708, -31.255} ;

///*************** the fourth leg **************/

//float MOTOR_7_ANGLE[LENGTH] = {
//-79.155,-79.155,-79.155,-79.155,-79.155,
//-79.155, -94.9304, -108.733, -120.409, -128.36,
//-127.757, -114.72, -95.6465, -76.8754, -60.4018,
//-46.1463,-46.1463,-46.1463,-46.1463,-46.1463,
//-46.1463, -50.0491, -53.6157,-56.973, -60.2383,
//-63.4976, -66.7907, -70.1014,-73.3558, -76.4282} ;

//float MOTOR_8_ANGLE[LENGTH] = {
//-27.4736,-27.4736,-27.4736,-27.4736,-27.4736,
//-27.4736, -38.9605, -53.7877, -72.9057, -94.7001,
//-109.888, -108.34, -97.6677, -85.6458, -73.4891,
//-60.4824, -60.4824, -60.4824, -60.4824, -60.4824, 
//-60.4824, -57.6341, -54.5109,-51.246, -47.94,
//-44.6503, -41.3874, -38.1175,-34.7708, -31.255} ;




//crawl
/*************** the first leg **************/

//float MOTOR_1_CRAWL_ANGLE[CRAWLLENGTH] = {
//120.79, 125.811, 129.374, 130.948, 129.758,
//125.546, 119.174, 111.973, 105.015, 98.9937,
//94.3221, 94.5794, 94.8227, 95.0851, 95.398,
//95.7896, 96.2854, 96.9076, 97.6754, 98.6049,
//99.709, 100.997, 102.476, 104.15, 106.017,
//108.075, 110.316, 112.727, 115.293, 117.991
//} ;

//float MOTOR_2_CRAWL_ANGLE[CRAWLLENGTH] = {
//100.55, 108.368, 116.666, 124.014, 128.433,
//128.763, 125.788, 121.113, 115.881, 110.602,
//105.365, 103.71, 102.064, 100.468, 98.9606,
//97.5726, 96.3311, 95.2579, 94.3708, 93.6839,
//93.208, 92.9511, 92.919, 93.1148, 93.5398,
//94.1923, 95.0681, 96.1587, 97.4509, 98.9246
//} ;

///*************** the second leg **************/

//float MOTOR_3_CRAWL_ANGLE[CRAWLLENGTH] = {
//37.5638, 57.487, 72.8138, 84.1446, 90.5665,
//90.711, 84.4172, 73.3649, 59.4738, 43.4941,
//24.3521, 24.3488, 24.3426, 24.3534, 24.4006,
//24.5029, 24.6776, 24.9399, 25.3027, 25.7755,
//26.3648, 27.0731, 27.8994, 28.839, 29.8836,
//31.022, 32.2401, 33.5219, 34.8493, 36.2033
//} ;

//float MOTOR_4_CRAWL_ANGLE[CRAWLLENGTH] = {
//24.4982, 40.5016, 54.6849, 67.6951, 78.0526,
//82.9116, 80.8205, 73.2916, 62.4681, 49.1768,
//32.566, 31.5896, 30.6186, 29.67, 28.7596,
//27.9024, 27.1115, 26.3984, 25.772, 25.2386,
//24.8016, 24.4614, 24.2153, 24.0576, 23.9802,
//23.9726, 24.022, 24.1147, 24.2355, 24.3686
//} ;

///*************** the third leg **************/

//float MOTOR_5_CRAWL_ANGLE[CRAWLLENGTH] = {
//-120.79, -125.811, -129.374, -130.948, -129.758,
//-125.546, -119.174, -111.973, -105.015, -98.9937,
//-94.3221, -94.5794, -94.8227, -95.0851, -95.398,
//-95.7896, -96.2854, -96.9076, -97.6754, -98.6049,
//-99.709, -100.997, -102.476, -104.15, -106.017,
//-108.075, -110.316, -112.727, -115.293, -117.991
//} ;

//float MOTOR_6_CRAWL_ANGLE[CRAWLLENGTH] = {
//-100.55, -108.368, -116.666, -124.014, -128.433,
//-128.763, -125.788, -121.113, -115.881, -110.602,
//-105.365, -103.71, -102.064, -100.468, -98.9606,
//-97.5726, -96.3311, -95.2579, -94.3708, -93.6839,
//-93.208, -92.9511, -92.919, -93.1148, -93.5398,
//-94.1923, -95.0681, -96.1587, -97.4509, -98.9246
//} ;

///*************** the fourth leg **************/

//float MOTOR_7_CRAWL_ANGLE[CRAWLLENGTH] = {
//-37.5638, -57.487, -72.8138, -84.1446, -90.5665,
//-90.711, -84.4172, -73.3649, -59.4738, -43.4941,
//-24.3521, -24.3488, -24.3426, -24.3534, -24.4006,
//-24.5029, -24.6776, -24.9399, -25.3027, -25.7755,
//-26.3648, -27.0731, -27.8994, -28.839, -29.8836,
//-31.022, -32.2401, -33.5219, -34.8493, -36.2033
//} ;

//float MOTOR_8_CRAWL_ANGLE[CRAWLLENGTH] = {
//-24.4982, -40.5016, -54.6849, -67.6951, -78.0526,
//-82.9116, -80.8205, -73.2916, -62.4681, -49.1768,
//-32.566, -31.5896, -30.6186, -29.67, -28.7596,
//-27.9024, -27.1115, -26.3984, -25.772, -25.2386,
//-24.8016, -24.4614, -24.2153, -24.0576, -23.9802,
//-23.9726, -24.022, -24.1147, -24.2355, -24.3686
//} ;


/*********************** function ***************************/
void LegPoints_Init(void); //Legpoints init
void BezierRegulate(int MotorID);  //Regulate footpoints by bezier curve on floating state
void SinRegulate(float Amplitude, int MotorID);    //Regulate footpoints by sin curve on standing state
void BezierControlPoints_Init(void);    // Bezier controlling points init
void BezierControlPointsArray_Init(void);    // Bezier controlling points arrays init
void BezierControlPoints_Assign(float x, float y, ClassicPointsTypedef *point);   // Change bezier controlling points
float Calculate_Motor_Angle(float x, float y, LegPointsTypedef * A, int side);   //calculate the angle from the coordinate of footpoint kinematically
float AngleConversion(float PreAngle, int LegID);   //input MotorID to choose motor for conversion, e.g 1:motor_1
void AngleReverse(int LegID);  //Reverse motor angel array
void Navigation(void);   // Change bezier controlling points accordding to the navigation angle yaw
void LeftTurn(float yaw);    // Turn left
void RightTurn(float yaw);   // Turn right
void PitchUp(float pitch);    
void PitchDown(float pitch);  
void ChangeOrder(int MotorID);
float AngleConversion_2generation(float PreAngle, int LegID);   //input MotorID to choose motor for conversion, e.g 1:motor_1
void chassisOneCircle(void);

#endif 
/******************* (C) COPYRIGHT 2017 HUST-Robocon-Team *****END OF FILE****/
